{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"travis-ci-js-test-driver","tagline":"An example of how to use Js Test Driver with Travis CI","body":"[![Build Status](https://travis-ci.org/danielmlipton/travis-ci-js-test-driver.png?branch=master)](https://travis-ci.org/danielmlipton/travis-ci-js-test-driver)\r\n\r\ntravis-ci-js-test-driver\r\n========================\r\n\r\n## Get The Code \r\n\r\nNote that this repository uses two required submodules.  To get all of the code\r\nyou need, please use the following commands:\r\n\r\n```\r\ngit clone git@github.com:danielmlipton/travis-ci-js-test-driver.git\r\ngit submodule init\r\ngit submodule update\r\n```\r\n\r\n## Dependencies\r\n\r\n * [node.js](http://nodejs.org/)\r\n\r\nWith [Homebrew](http://mxcl.github.com/homebrew/) on a Mac:\r\n\r\n```\r\nbrew update && brew install node\r\n```\r\n\r\n * [PhantomJS](http://phantomjs.org/)\r\n\r\n```\r\nnpm install phantomjs\r\n```\r\n\r\nor\r\n\r\n```\r\nbrew install phantomjs\r\n```\r\n\r\n*TODO: Document how to install phantom with the included package.json*\r\n\r\nThis repository does not contain the JsTestDriver jar, but the included Travis\r\nCI config will download the file on the build machine and place it in the \r\nappropriate directory.  If you'd like to run the tests locally, you'll need to\r\ndownload the following file:\r\n\r\n```\r\ncurl -o resources/JsTestDriver-1.3.3d.jar \\\r\n        http://js-test-driver.googlecode.com/files/JsTestDriver-1.3.3d.jar\r\n```\r\n\r\n## Testing Your Setup\r\n\r\nTo ensure that your installation is working with the tests included in the\r\nsubmodule js-test-driver-demo, you'll need to start the JsTestDriver server:\r\n\r\n```\r\njava -jar resources/js-test-driver/JsTestDriver-1.3.3d.jar \\\r\n     --basePath resources/js-test-driver                   \\\r\n     --config resources/js-test-driver/jsTestDriver.conf   \\\r\n     --port 9876 \r\n```\r\n\r\nThen you'll need to start an instance of PhantomJS with the submodule\r\njs-test-driver-phantomjs:\r\n\r\n```\r\nphantomjs resources/js-test-driver-phantomjs/phantomjs-jstd.js &\r\n```\r\n\r\nFinally, you'll need to execute all of the tests:\r\n\r\n```\r\njava -jar resources/js-test-driver/JsTestDriver-1.3.3d.jar \\\r\n     --basePath resources/js-test-driver --tests all --reset\r\n```\r\n\r\nYou should see results like:\r\n\r\n    Safari: Reset\r\n    Safari: Reset\r\n    .\r\n    .\r\n    .\r\n    .\r\n    .\r\n    ..\r\n    .\r\n    ...\r\n    Total 11 tests (Passed: 11; Fails: 0; Errors: 0) (3053.00 ms)\r\n    Safari 534.34 Mac OS: Run 11 tests (Passed: 11; Fails: 0; Errors 0) (3053.00 ms)\r\n    ConsoleTestCase.testLogging passed (1.00 ms)\r\n          [LOG] This is log message.\r\n          [DEBUG] Printing out the value  2\r\n          [INFO] Array content is:  [\"one\",\"two\",3,\"four\"]  \r\n          [WARN] The value is undefined:  undefined\r\n          [ERROR] 1 2 3 4 5 6 7 8 9 10\r\n\r\n## Merging With Your Repository\r\n\r\nBefore moving any of these files into your own repository, you should note that\r\nthere is no src or lib directories included with this example.  The test code\r\nwas unceremoniously borrowed from Mária Jurčovičová's [very thorough post]\r\n(http://meri-stuff.blogspot.com/2012/01/javascript-testing-with-jstestdriver.html)\r\nabout testing with JsTestDriver.  It's only included as an example of tests\r\nwritten for JsTestDriver.  You probably don't want to use them in your code.\r\n\r\nSecond, you probably don't want to include a 4 Mb binary file in your repository.\r\nIn order to do this, please add the following to your .gitignore:\r\n\r\n    JsTestDriver-1.3.3d.jar\r\n\r\nThird, you might already have a .travis.yml in your repository.  You will need\r\nto copy at least the before_script section of the included .travis.yml.\r\n\r\nLastly, you probably do want to add js-test-driver-phantomjs to your repository\r\nas a submodole.  You can accomplish this with the following command, just change\r\nthe destination path:\r\n\r\n```\r\ngit submodule add git://github.com/larrymyers/js-test-driver-phantomjs.git \\\r\n    path/to/js-test-driver-phantomjs\r\n```\r\n\r\n## Tips\r\n\r\nPhantomJS uses [a very old version of WebKit]\r\n(http://code.google.com/p/phantomjs/issues/detail?id=522) that doesn't support\r\n[bind()](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind)\r\nand likely other new features in [JavaScript 1.8.5]\r\n(https://developer.mozilla.org/en-US/docs/JavaScript/New_in_JavaScript/1.8.5).\r\nIf you use bind() in any of the code you are testing, you'll need to include\r\na [polyfill](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind#Compatibility).\r\nAdditional polyfills can be found at [Modernizr's excellent collection]\r\n(https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills) or\r\nat Mozilla Developer Network's [JavaScript Reference]\r\n(https://developer.mozilla.org/en-US/docs/JavaScript/Reference).\r\n\r\nThe most recent versions of JsTestDriver have problems with relative paths.\r\nAccording to [this thread](http://code.google.com/p/js-test-driver/issues/detail?id=223)\r\non the JsTestDriver site, you'll need to use JsTestDriver-1.3.3d in order to\r\nuse it on Travis CI because you don't control the path there.  Sure, you could\r\nmonkey around with bash or other scripting tool to set it if you absolutely need\r\nto, but there was no compelling feature in the newer versions for me.\r\n\r\n## The Story Of This Repository\r\n\r\nWhen I was writing the tests for [pubsub](https://github.com/danielmlipton/pubsub),\r\nI became curious about code coverage.  After a brief tangle with a variety of\r\ndifferent options, I chose to use [JsTestDriver](http://code.google.com/p/js-test-driver/)\r\nwith the coverage plugin.  This had the following benefits:\r\n\r\n1.  A IDE and CI friendly tool for running unit tests.\r\n2.  Code coverage\r\n3.  The project has (relatively) lengthy history, even if does not seem to be in very active development.\r\n4.  Reasonable documentation, if scattered across many different blogs.\r\n\r\nIn writing tests for [clock](https://github.com/danielmlipton/clock), I used\r\n[PhantomJS](http://phantomjs.org/) and [Zombie.js](http://zombie.labnotes.org/)\r\nwith [QUnit](http://qunitjs.com/) and [cucumber-js](https://github.com/cucumber/cucumber-js).\r\nQUnit comes wit [runner.js](https://github.com/jquery/qunit/tree/master/addons/phantomjs).  \r\nCucmber-js utilizes Zombie.js.  While these tools work well and were easily\r\nintegrated into [Travis CI](https://travis-ci.org), adding code coverage to the\r\nprocess proved troublesome.\r\n\r\nAfter writing a majority of my tests in QUnit, I discovered [Sinon.js](http://sinonjs.org/),\r\nwhich plays nicely with QUnit.  After integrating the two testing frameworks, I\r\nbegan in earnest trying to get the both running with JsTestDriver.  This was a\r\nlot more difficult than it should have been given a number of bugs in the various\r\ntools I chose to use.  See the tips section for a lengthier explanation of two\r\nof the bugs that a relevant to this repository.\r\n\r\nThe effort took some pretty serious snooping and brute force attempts to solve\r\nproblems I had little insight into.  However, with JsTestDriver was working on my\r\nlocal development environment I began the process of searching for others\r\nwho had successfully set up [JsTestDriver and Travis CI]\r\n(https://groups.google.com/forum/?fromgroups=#!topic/js-test-driver/teDkckYql2w).\r\nWith no real leads, I began to blindly poke around Travis CI and eventually\r\nstumbled into a solution that worked.  After some refactoring, I felt that I had\r\na reasonable approach that I thought I'd share here for others to learn from.\r\n\r\nIn the end, JsTestDriver's code coverage plugin doesn't even work on Travis CI.\r\nIn fact, it just reports [0.0% code coverage]\r\n(https://travis-ci.org/danielmlipton/pubsub/builds/3890560).\r\n"}